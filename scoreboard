#!/usr/bin/env python3

import sys
print(sys.argv)
if len(sys.argv) > 1:
    qt = True
    configfile = sys.argv[1]
else:
    qt = False

if not qt:
    import RPi.GPIO as GPIO
from time import sleep
import subprocess
from config import Config
from multiprocessing.connection import Client

process = None
mode = None
if qt:
    display_process = subprocess.Popen(["python","./qt_display.py",configfile])
else:
    display_process = subprocess.Popen(["python3","/bin/display.py"])

def switch_toggled(channel):
    global process

    sleep(0.25)
    if process and ((GPIO.input(15) == 0 and mode == 'offline') or (GPIO.input(15) == 1 and mode == 'online')):
        print('Killing old process')
        process.kill()
        process = None


# copy the config file into the root filesystem
if qt:
    config = Config(configfile)
else:
    config = Config()
config.load()

if not qt:
    # setup the online / offline switch
    GPIO.setwarnings(False)
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(15, GPIO.IN, GPIO.PUD_UP)
    GPIO.add_event_detect(15, GPIO.BOTH, callback=switch_toggled, bouncetime=500)



# start up the scoreboard in the correct mode
while True:
    try:

        if qt:
            display = Client(('localhost', 6000), authkey=b'vbscores')
            display.send(['mesg', 'Connecting ...'])
            display.send(['close'])
            print('Starting QT Mode')

            # start the app
            process = subprocess.Popen(["python","./sb_qt.py",configfile])
            process.wait()
            print('QT Mode Exited')

        elif GPIO.input(15) == 0:
            display = Client(('localhost', 6000), authkey=b'vbscores')
            display.send(['mesg', 'Connecting ...'])
            display.send(['close'])
            print('Starting Online Mode')

            # online mode
            mode = 'online'
            sleep(0.25)

            # enable wifi
            with open('/etc/wpa_supplicant.conf', "w") as outfile:
                subprocess.run(["wpa_passphrase", config.wifi["ssid"], config.wifi["password"]], stdout=outfile)
            subprocess.run(["ifup", "wlan0"])

            # start the app
            process = subprocess.Popen(["taskset","8","python3","/bin/sb_online.py"])
            process.wait()
            print('Online Mode Exited')

        else:
            print('Starting Offline Mode')

            # offline mode
            mode = 'offline'
            process = subprocess.Popen(["taskset","8","python3","/bin/sb_offline.py"])
            process.wait()
            print('Offline Mode Exited')

    except Exception as e:
        print(e)

